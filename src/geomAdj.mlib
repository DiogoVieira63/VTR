<?xml version="1.0" ?>
<materialLib name="Geometry With Adjacency">


	<shaders>
		<shader name="geomAdj" 		ps="shaders/dirlightdiffambpix.frag" 
									gs="shaders/lineAdj2.geom"
									vs="shaders/dirlightdiffambpix.vert" />

		<shader name="toon" 		ps="shaders/toon.frag" 
									vs="shaders/toon.vert" />									
	</shaders>

	<materials>
		<material name="showContours">
			<shader name="geomAdj">
				<values>
					<valueof uniform="PVM"          	type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="M"          		type="RENDERER" context="CURRENT" 
														component="MODEL" />
					<valueof uniform="camPos"				type="CAMERA" context="CURRENT"
														component="POSITION" />
					<valueof uniform="VIM" type="CAMERA" context="CURRENT"
														component="VIEW_INVERSE_MATRIX" />

					<value uniform="VM" type="CAMERA" context="CURRENT"
														component="VIEW_MATRIX" />

					<valueof uniform="m_view" type="RENDERER"
                        component="VIEW"/>

					<valueof uniform="l_dir" type="LIGHT"
                        component="DIRECTION" id="0" />

                    <valueof uniform="diffuse" type="COLOR"
                        component="DIFFUSE"/>

					<valueof uniform="m_normal" type="RENDERER"
                        component="NORMAL" />
														
				</values>
			</shader>
		</material>

		<material name="toon">
			<shader name="toon">
				<values>
					<valueof uniform="PVM"          	type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="m_normal" type="RENDERER"
                        component="NORMAL" />
					<valueof uniform="m_view" type="RENDERER"
                        component="VIEW"/>

					<valueof uniform="VM" type="RENDERER"
                        component="VIEW_MODEL"/>

					<valueof uniform="l_dir" type="LIGHT"
                        component="DIRECTION" id="0" />
					<valueof uniform="diffuse"		type="COLOR" context="CURRENT"
														component="DIFFUSE" />
														
				</values>
			</shader>
		</material>
	</materials>
</materialLib>