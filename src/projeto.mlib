<?xml version="1.0" ?>
<materialLib name="Geometry With Adjacency">


	<shaders>
		<shader name="geomAdj" 		ps="shaders/outline.frag" 
									gs="shaders/outline.geom"
									vs="shaders/outline.vert" />

		<shader name="toon" 		ps="shaders/toon.frag" 
									vs="shaders/toon.vert" />	

		<shader name="gooch" 		ps="shaders/gooch.frag" 
									vs="shaders/gooch.vert" />		

		<shader name="hatch" 		ps="shaders/hatch.frag" 
									vs="shaders/hatch.vert" />		
	</shaders>


	<textures>
		<texture name="h0" filename="../textures/hatch_0.jpg"  mipmap="true"/>
		<texture name="h1" filename="../textures/hatch_1.jpg"  mipmap="true"/>
		<texture name="h2" filename="../textures/hatch_2.jpg"  mipmap="true"/>
		<texture name="h3" filename="../textures/hatch_3.jpg"  mipmap="true"/>
		<texture name="h4" filename="../textures/hatch_4.jpg"  mipmap="true"/>
		<texture name="h5" filename="../textures/hatch_5.jpg"  mipmap="true"/>
		<texture name="teapot" filename="../textures/teapot.jpg"  mipmap="true"/>
	</textures>

	<materials>
		<material name="showContours">
			<shader name="geomAdj">
				<values>
					<valueof uniform="PVM"          	type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="M"          		type="RENDERER" context="CURRENT" 
														component="MODEL" />
					<valueof uniform="camPos"				type="CAMERA" context="CURRENT"
														component="POSITION" />
					<valueof uniform="VIM" type="CAMERA" context="CURRENT"
														component="VIEW_INVERSE_MATRIX" />

					<value uniform="VM" type="CAMERA" context="CURRENT"
														component="VIEW_MATRIX" />

					<valueof uniform="m_view" type="RENDERER"
                        component="VIEW"/>

					<valueof uniform="l_dir" type="LIGHT"
                        component="DIRECTION" id="0" />

					<valueof uniform="lightPos" type="LIGHT"
                        component="POSITION" id="0" />

                    <valueof uniform="diffuse" type="COLOR"
                        component="DIFFUSE"/>

					<valueof uniform="m_normal" type="RENDERER"
                        component="NORMAL" />		
				</values>
			</shader>
		</material>

		<material name="toon">
			<shader name="toon">
				<values>
					<valueof uniform="PVM"  type="RENDERER" context="CURRENT" 
											component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="m_normal" type="RENDERER"
                        component="NORMAL" />
					<valueof uniform="m_view" type="RENDERER"
                        component="VIEW"/>

					<valueof uniform="VM" type="RENDERER"
                        component="VIEW_MODEL"/>

					<valueof uniform="l_dir" type="LIGHT"
                        component="DIRECTION" id="0" />
					<valueof uniform="diffuse"		type="COLOR" context="CURRENT"
														component="DIFFUSE" />

					<valueof uniform="specular" type="COLOR"
                        component="SPECULAR"/>
					
                    <valueof uniform="shininess" type="COLOR"
                        component="SHININESS"/>

					<valueof uniform="tex"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="0" />	

					<valueof uniform="num_divisions" 
                        type="RENDERER" component="num_divisions" />
				</values>
			</shader>
		</material>
		<material name="gooch">
			<shader name="gooch">
				<values>
					<valueof uniform="PVM"  type="RENDERER" context="CURRENT" 
											component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="m_normal" type="RENDERER"
                        component="NORMAL" />
					<valueof uniform="m_view" type="RENDERER"
                        component="VIEW"/>

					<valueof uniform="VM" type="RENDERER"
                        component="VIEW_MODEL"/>

					<valueof uniform="l_dir" type="LIGHT"
                        component="DIRECTION" id="0" />
					<valueof uniform="diffuse"		type="COLOR" context="CURRENT"
														component="DIFFUSE" />

					<valueof uniform="specular" type="COLOR"
                        component="SPECULAR"/>
					
                    <valueof uniform="shininess" type="COLOR"
                        component="SHININESS"/>

					<valueof uniform="alpha" 
                        type="RENDERER" component="alpha" />

					<valueof uniform="beta" 
                        type="RENDERER" component="beta" />

				</values>
			</shader>
		</material>

		<material name="hatch">
			<shader name="hatch">
				<values>
					<valueof uniform="PVM"  type="RENDERER" context="CURRENT" 
											component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="m_normal" type="RENDERER"
                        component="NORMAL" />
					<valueof uniform="m_view" type="RENDERER"
                        component="VIEW"/>

					<valueof uniform="VM" type="RENDERER"
                        component="VIEW_MODEL"/>

					<valueof uniform="l_dir" type="LIGHT"
                        component="DIRECTION" id="0" />
					<valueof uniform="diffuse"	type="COLOR" context="CURRENT"
												component="DIFFUSE" />

					<valueof uniform="specular" type="COLOR"
                        component="SPECULAR"/>

					
                    <valueof uniform="shininess" type="COLOR"
                        component="SHININESS"/>
				
					<valueof uniform="hatching0"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="0" />
					<valueof uniform="hatching1"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="1" />			
					<valueof uniform="hatching2"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="2" />		
					<valueof uniform="hatching3"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="3" />			
					<valueof uniform="hatching4"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="4" />			
					<valueof uniform="hatching5"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="5" />	

					
					<valueof uniform="tex"
							 type="TEXTURE_BINDING"
							 component="UNIT" id="6" />			
							 											
				</values>
			</shader>
			<textures>
				<texture name="h0" UNIT = "0" />
				<texture name="h1" UNIT = "1" />
				<texture name="h2" UNIT = "2" />
				<texture name="h3" UNIT = "3" />
				<texture name="h4" UNIT = "4" />
				<texture name="h5" UNIT = "5" />
				<texture name="teapot" UNIT= "6"/>
			</textures>
		</material>

	</materials>
</materialLib>